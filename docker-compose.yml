version: '3.1'

services:
# Continuous integration
  jenkins:
    image: jenkins:2.32.3-alpine
    ports:
      - "8001:8080"
    volumes:
      - /amf/jenkins/jenkins_home:/var/jenkins_home
    networks:
      - amf

# Code quality
  sonarqube:
    image: sonarqube:6.3-alpine
    ports:
      - "8002:9000"
    environment:
      - SONARQUBE_JDBC_USERNAME=sonarqube
      - SONARQUBE_JDBC_PASSWORD=sonarqube
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
    volumes:
      - /amf/sonarqube/sonarqube_conf:/opt/sonarqube/conf
      - /amf/sonarqube/sonarqube_data:/opt/sonarqube/data
      - /amf/sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
      - /amf/sonarqube/sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
      - /amf/sonarqube/sonarqube_temp:/opt/sonarqube/temp
    depends_on:
      - postgres
    networks:
      - amf

# Database for Sonarqube
  postgres:
    image: postgres:9.6.2-alpine
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarqube
    volumes:
      - /amf/postgres/postgresql:/var/lib/postgresql
      - /amf/postgres/postgresql_data:/var/lib/postgresql/data
    networks:
      - amf

# Artifact storage
  nexus:
    image: sonatype/nexus3:3.2.1
    ports:
      - "8003:8081"
    networks:
      - amf
# Administation
  portainer:
    image: portainer/portainer:1.12.1
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: -H unix:///var/run/docker.sock
    ports:
      - "8000:9000"
    networks:
      - amf

networks:
  amf:
    driver: overlay